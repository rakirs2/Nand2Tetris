// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/Xor.hdl
/**
 * Exclusive-or gate:
 * if ((a and Not(b)) or (Not(a) and b)) out = 1, else out = 0
 */
CHIP Xor {
    IN a, b;
    OUT out;

    PARTS:
    //// Replace this comment with your code.
    /*
    This is given in the text. But what we want to do is flip the known equivalence operation
    x and y or not x and not y

    Then nand Not or Nand on that. There has to be an easier way?
    */
    Not(in = a, out = notX);
    Not(in = b, out = notY);
    And(a = a, b = b, out = xAndY);
    And(a = notX, b = notY, out = notXAndNotY);
    Or(a = xAndY, b = notXAndNotY, out = equivalence);
    Not(in = equivalence, out = out);
}